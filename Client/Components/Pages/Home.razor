@page "/dashboard"
@using Client.Config
@using System.Security.Claims
<PageTitle>@localizer["Home"]</PageTitle>


<button class="btn btn-primary" @onclick="ShowDialog">@localizer["AboutMe"] </button>

<Client.Components.Pages.Modal.ModalPopup Title="@localizer["Welcome"]" Opened="dialogShown" CloseButtonClicked="@(() => dialogShown = false)">
    <BodyContent>
        <p class="fw-bold font-monospace" style="font-size: 18px;">
            @localizer["AboutMeText"] <br/>
        </p>
        <div class="d-flex justify-content-start">
            <p style="font-size: 13px;" class="font-monospace">@localizer["RightsReserved"]</p>
        </div>
    </BodyContent>
    <FooterContent>
          <div class="d-flex justify-content-end align-items-end">

            <button class="ok-button" @onclick="@(() => dialogShown = false)">Ok</button>
          </div>
    </FooterContent>
</Client.Components.Pages.Modal.ModalPopup>



@code{
    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateTask;
        var userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        var userEmail = authState.User.FindFirst(ClaimTypes.Email)?.Value;
       await CheckUserAuthentication();
    }
    private async Task CheckUserAuthentication()
    {
        var user = (await AuthStateTask).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (!isUserAuthenticated)
            navigationManager.NavigateTo("/login");
    }
    private bool dialogShown = false;

    private void ShowDialog()
    {
        dialogShown = true;
    }
}
